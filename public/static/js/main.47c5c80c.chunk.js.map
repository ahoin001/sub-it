{"version":3,"sources":["components/user-components/Signup.js","components/user-components/Login.js","components/Home.js","components/Project.js","components/SubtitleCreation.js","components/ProjectDetailPage.js","components/ProjectsList.js","components/project-components/Project-Form.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Signup","props","state","fullName","email","password","message","event","target","name","value","this","setState","preventDefault","axios","post","process","withCredentials","then","responseFromServer","console","log","userDoc","data","onUserChange","catch","err","currentUser","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","required","React","Component","Login","history","push","response","Home","Project","playVideo","refs","vidRef","play","pauseVideo","pause","currentTime","className","ref","src","projectObject","videoURL","onMouseOver","onMouseLeave","videoTitle","SubtitleCreation","subInit","createSub","tracks","document","querySelector","textTracks","video","getElementById","inTime","cue","VTTCue","addCue","outTime","cuesLength","cues","length","endTime","onClick","id","style","display","rows","cols","maxLength","ProjectPage","url","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","crossOrigin","autoPlay","preload","label","kind","srcLang","default","ProjectsList","componentDidMount","theUser","get","_id","projectsOfUser","error","projectsInfo","map","project","title","genre","description","listItems","i","key","ProjectForm","navBar","responseFromTheBackend","syncCurrentUSer","user","to","exact","path","component","render","App","Navbar","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47c5c80c.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\n/* TODO\n\n1. Sign Up Not Working\n2. Redirect user if they got to user projects page but are not signed in \n3. \n\n*/\nexport default class Signup extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            fullName: \"\",\n            email: \"\",\n            password:\"\",\n            message: null\n        }\n    }\n\n    genericSync(event){\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/signup`,\n            // the data from the form (AKA req.body ðŸš€) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            console.log(\"response is:\", responseFromServer);\n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n        })\n        .catch( err => console.log(\"Err in signup: \", err));\n    }\n\n    render(){\n        console.log(\"Do I have user in Signup: \", this.props.currentUser)\n        const { fullName, email, password } = this.state;\n        \n        // If user is signed in\n        if(this.props.currentUser){\n            return(\n                <div>\n                    <h2> Welcome to your app, { this.props.currentUser.fullName } ! You're signed in! </h2>\n                </div>\n            )\n        }\n\n        return (\n            <section>\n\n                <h2> Sign up </h2>\n\n                <form onSubmit ={ event => this.handleSubmit(event) } >\n                    <label> Full name: </label>\n                    <input\n                        value={fullName} // this.state.fullName\n                        onChange = { event => this.genericSync(event) } \n                        type=\"text\"\n                        name=\"fullName\"\n                        placeholder=\"John Smith\"\n                    />\n\n                     <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        required\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        required\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    />\n\n                    <button> Sign Up </button>\n\n                </form>\n\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n\n            </section>\n\n        )\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\n\n\nexport default class Login extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            email: \"\",\n            password:\"\",\n            message: null\n        }\n    }\n\n    genericSync(event){\n        console.log(\"==============================================================Target is: \", event.target)\n        console.log(\"==============================================================Value is: \", event.target.value)\n        // Destructure to get naame and value for target \n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit (event){\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(\n            // route we are hitting in the backend\n            `${process.env.REACT_APP_API_URL}/login`,\n            // the data from the form (AKA req.body ðŸš€) that we are sending to this route to do the job\n            this.state,\n            // secure sending\n            { withCredentials: true }\n        )\n        .then( responseFromServer => {\n            // console.log(\"response is:\", responseFromServer);\n            console.log(\"do I have any props ????????? \", this.props)\n            const { userDoc } = responseFromServer.data;\n            this.props.onUserChange(userDoc);\n            this.props.history.push('/ProjectsList');\n            // alert(\"You are logged in.\")\n        })\n        .catch( err => {\n            console.log(\"err: \", err.response)\n            if(err) return this.setState({ message: err })\n        });\n    }\n\n    render(){\n        const { email, password } = this.state;\n\n        return (\n            <section>\n                <h2> Login </h2>\n                <form onSubmit ={ event => this.handleSubmit(event) } >\n            \n                    <label> Email: </label>\n                    <input\n                        value={email} // this.state.email\n                        onChange = { event => this.genericSync(event) } \n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"my-email@ironhack.com\"\n                    />\n\n                    <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange = { event => this.genericSync(event) } \n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    />\n                    <button> Login </button>\n                </form>\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                { this.state.message && <div> { this.state.message } </div> }\n            </section>\n        )\n    }\n}","import React from \"react\";\n\n\nexport default class Home extends React.Component {\n\n    render(){\n        return (\n            <section>\n                <h1> Home Page </h1>\n                <p> Welcome to the best app ever!  </p>\n            </section>\n        )\n    }\n}","//TODO LIST \n/*\n1. Fill up card with video\n\n\n*/\n\n/*\n\nprojectObject is a prop that is recieving an object with information of a video\n\n*/\n\nimport React from 'react';\n\n// Import Personal Card Styling\nimport '../ProjectStyles.css'\n\nclass Project extends React.Component {\n\n\n    playVideo = () => {\n\n        // References video with \"vidRef\" ref attribute, then plays the video\n        this.refs.vidRef.play();\n\n    };\n\n    pauseVideo = () => {\n        // References video with \"vidRef\" ref attribute, then pauses the video\n        this.refs.vidRef.pause();\n        this.refs.vidRef.currentTime = 0;\n    };\n\n\n    render() {\n\n        return (\n            <div>\n\n                <div className=\"card \">\n\n                    <div className=\"card_video\">\n\n                        <video\n                            ref=\"vidRef\"\n                            src={this.props.projectObject.videoURL} \n                            type=\"video/mp4\"\n                            onMouseOver={this.playVideo}\n                            onMouseLeave={this.pauseVideo}\n                        >\n                        </video>\n\n                    </div>\n\n                    <div className=\"card_title title-white\">\n\n                        {/* <p>Video Title</p> */}\n                        <p>{this.props.projectObject.videoTitle}</p>\n\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n\n\n};\n\nexport default Project;\n","import React from 'react';\nimport Project from './Project'\nimport axios from \"axios\";\n\nclass SubtitleCreation extends React.Component {\n  state = {\n    subInit: false\n  }\n\n    createSub = () => {\n    let tracks = document.querySelector('video').textTracks;\n    let video = document.getElementById('video');\n\n    if (this.state.subInit === false){      \n      let inTime = video.currentTime;\n      let cue = new VTTCue(inTime,null,'');      \n      tracks[0].addCue(cue);    \n      this.setState({subInit: true });\n    } else {\n      let outTime = video.currentTime;\n      let cuesLength = tracks[0].cues.length;\n      console.log('cuesLength = ' + cuesLength)\n      video.pause();\n      tracks[0].cues[cuesLength - 1].endTime = outTime;\n      console.log(tracks[0]);\n      console.log(tracks[0].cues[cuesLength - 1]);\n      this.setState({subInit: false });\n    }\n  } \n\n  render() {\n\n    return(\n    <div>\n      <button onClick={this.createSub}>Create sub</button>\n      {/* Subtitle Modal */}\n      <div id=\"sub-text\" className=\"modal\" style={{display:'none'}}>\n\n        {/* Modal content */}\n        <div id=\"sub-modal\">\n            <span id=\"close\">&times;</span>\n            <textarea id=\"this-sub-text\" rows=\"2\" cols=\"50\" maxLength=\"80\"></textarea>\n            <button id=\"save-text-btn\">Save</button>\n            <button id=\"cancel-btn\">Cancel</button>\n        </div>\n\n      </div>\n    </div>\n\n    );\n  }\n}\n\nexport default SubtitleCreation;","import React from 'react';\n// import ReactPlayer from 'react-player';\nimport SubtitleCreation from './SubtitleCreation';\n\nclass ProjectPage extends React.Component {\n    state = {\n        url: null,\n        pip: false,\n        playing: true,\n        controls: false,\n        light: false,\n        volume: 0.8,\n        muted: false,\n        played: 0,\n        loaded: 0,\n        duration: 0,\n        playbackRate: 1.0,\n        loop: false\n    }\n\n\n    playVideo = () => {\n        // You can use the play method as normal on your video ref\n        this.refs.vidRef.play();\n\n    };\n\n    pauseVideo = () => {\n        // Pause as well\n        this.refs.vidRef.pause();\n        this.refs.vidRef.currentTime = 0;\n    };\n\n    render() {\n\n        return (\n\n            <div>\n\n                <div>\n\n                    {/* <video\n                        id=\"project-Being-Worked-On\"\n                        ref=\"vidRef\"\n                        src=\"https://assets.polestar.com/video/test/polestar-1_09.mp4\"\n                        type=\"video/mp4\"\n                        onMouseOver={this.playVideo}\n                        onMouseLeave={this.pauseVideo}\n                    /> */}\n\n                    <video id=\"video\" crossOrigin=\"anonymous\" autoPlay controls preload=\"metadata\">\n                    <source src=\"https://res.cloudinary.com/alejotsv/video/upload/v1572146282/videoplayback_dznrfa.mp4\" type=\"video/mp4\" />\n                    <track id=\"my-subs\" label=\"English\" kind=\"subtitles\" srcLang=\"en\" src=\"\" default/> \n                    </video>\n\n                    <div>\n                        \n\n                        {/* Button to work with subtitles (Add proper functions above ) */}\n                        {/* <button onClick={this.playVideo}>\n                            Play!\n                        </button>\n\n                        <button onClick={this.pauseVideo}>\n                            Pause!\n                    </button> */}\n\n                    </div>\n                    \n                </div>\n\n                < SubtitleCreation />\n\n            </div>\n\n\n\n\n        );\n    }\n}\n\nexport default ProjectPage;","//TODO LIST \n/*\n\n1. Get video url from projects and pass them to Project component prop\n\n*/\n\n\nimport React from 'react';\nimport Project from './Project'\nimport axios from \"axios\";\n// Import Personal Card Styling AND CONTAINER STYLING\nimport '../ProjectStyles.css'\n\nclass ProjectsList extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n\n            // Will Contain array of projects that belong to the loggged in user\n            projectsOfUser: []\n\n        }\n\n    }\n\n    componentDidMount = () => {\n\n        if(!this.props.theUser) {\n            this.props.history.push('/login')\n        }\n        console.log(\"this is the did mount and the props ========= \", this.props)\n        // Calls endpoint in backend that returns projects from a logged in user \n        axios.get(`${process.env.REACT_APP_API_URL}/dashboard/${this.props.theUser._id}`)// secure sending\n            .then(response => {\n                console.log(\"...............\", response);\n                this.setState({ projectsOfUser: response.data });\n            })\n            .catch(function (error) {\n                console.log(\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\n                console.log(error);\n            })\n\n    };\n\n\n\n    render() {\n\n        // console.log(\"here: \", this.state.projectsOfUser)\n\n        // Get video information from projects so that we can we pass each projects info into \n        //  it's own project component\n\n        // This is an array called projectInfo of objects with info that will be passed\n        const projectsInfo = this.state.projectsOfUser.map(project => {\n        \n            return{\n\n                videoTitle: project.title,\n                videoURL:   project.videoURL,\n                genre:      project.genre,\n                description: project.description\n            \n            }\n        \n        });\n\n        console.log(\"AAAAAAAAAAAAAAAAaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAA\",projectsInfo);\n\n        const listItems = this.state.projectsOfUser.map((project, i) =>\n            <li key={i}>\n\n                {/* <Project videoURL={vidURLS[i]}/> */}\n                <Project projectObject={projectsInfo[i]}/>\n\n            </li>\n        );\n\n\n        return (\n\n            <div className=\"project-container\" >\n\n                <ul>\n                    {this.state.projectsOfUser && listItems}\n                </ul>\n\n            </div>\n\n        );\n    }\n}\n\n\nexport default ProjectsList;","import React from 'react';\nimport axios from \"axios\";\n\n// TODO Make this Work\n\n\nclass ProjectForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoTitle: \"\",\n            videoURL: \"\",\n            // description: \"\",\n            message: null\n        }\n    }\n\n    genericSync(event) {\n        // console.log(\"what is: \", event.target.value)\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(event) {\n        // console.log(\"submitting form\");\n        event.preventDefault();\n\n        axios.post(`${process.env.REACT_APP_API_URL}/create-project/${this.props.theUser._id}`)// secure sending\n            .then(response => {\n                console.log(\"...............\", response);\n                this.setState({ projectsOfUser: response.data });\n            })\n            .catch(function (error) {\n                console.log(\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\n                console.log(error);\n            })\n    }\n\n\n    render() {\n        return (\n\n            <section>\n                <h2> Video Info </h2>\n\n                <form onSubmit={event => this.handleSubmit(event)} >\n                    <label> Video Title: </label>\n                    <input\n                        value={this.state.videoTitle} // this.state.fullName\n                        onChange={event => this.genericSync(event)}\n                        type=\"text\"\n                        name=\"videoTitle\"\n                        placeholder=\"The Great Journey\"\n                    />\n\n                    <label> Video File: </label>\n                    <input\n                        value={this.state.videoURL} // ex/ this.state.email\n                        onChange={event => this.genericSync(event)}\n                        type=\"file\"\n                        name=\"videoURL\"\n                    />\n\n                    {/* <label> Password</label>\n                    <input\n                        value={password} // this.state.password\n                        onChange={event => this.genericSync(event)}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"***********\"\n                    /> */}\n\n                    <button> Upload </button>\n                </form>\n                {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n                {this.state.message && <div> {this.state.message} </div>}\n            </section>\n\n        );\n    }\n}\n\nexport default ProjectForm;","import React from 'react';\nimport { Switch, Route, NavLink } from \"react-router-dom\";\n\nimport Signup from \"./user-components/Signup\";\nimport Login from \"./user-components/Login\"\nimport Home from \"./Home\";\nimport ProjectPage from './ProjectDetailPage';\nimport Project from './Project';\nimport ProjectsList from './ProjectsList';\nimport ProjectForm from './project-components/Project-Form';\n\nimport axios from \"axios\";\n\nclass navBar extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            currentUser: null\n        }\n    }\n\n    componentDidMount() {\n        // the url of backend port we get information from \n        axios.get(`${process.env.REACT_APP_API_URL}/checkuser`, { withCredentials: true })\n            .then(responseFromTheBackend => {\n                // console.log(\"User in APP.JS: \", responseFromTheBackend)\n                const { userDoc } = responseFromTheBackend.data;\n                this.syncCurrentUSer(userDoc);\n            })\n            .catch(err => console.log(\"Err while getting the user from the checkuser route: \", err))\n    }\n\n    syncCurrentUSer(user) {\n        this.setState({ currentUser: user })\n    }\n\n\n\n    render() {\n\n        return (\n\n            <div >\n\n\n\n                <nav>\n\n                    <ul className=\"navList\">\n\n                        <li><NavLink className=\"link\" to=\"/\" > Home </NavLink></li>\n                        <li><NavLink className=\"link\" to=\"/aProjectPage\" > ProjectPage </NavLink></li>\n                        <li><NavLink className=\"link\" to=\"/signup-page\"> Signup </NavLink></li>\n                        <li><NavLink className=\"link\" to=\"/login\"> Login </NavLink></li>\n                        <li><NavLink className=\"link\" to=\"/ProjectsList\" > Project List </NavLink></li>\n                        <li><NavLink className=\"link\" to=\"/form\" > Project Form </NavLink></li>\n\n\n                    </ul>\n                    {/* If project component needs to be seen individually */}\n                    {/* <NavLink to=\"/Project\" > Project Component </NavLink> */}\n\n                </nav>\n\n                <Switch>\n\n                    {/* this is example how we would render component normally */}\n                    {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/aProjectPage\" component={ProjectPage} />\n                    <Route exact path=\"/project\" component={Project} />\n                    <Route exact path=\"/ProjectsList\" render={props => <ProjectsList {...props} theUser={this.state.currentUser} />} />\n                    <Route exact path=\"/form\" render={props => <ProjectForm {...props} theUser={this.state.currentUser} />} />\n\n\n                    {/* if we have to pass some props down to a component,\n              we can't use a standard way of rendering using component={},\n              but instead we have to use render = {}  like in the example below */}\n                    <Route exact path=\"/signup-page\" render={() =>\n                        <Signup\n                            currentUser={this.state.currentUser}\n                            onUserChange={userDoc => this.syncCurrentUSer(userDoc)} //Pass anonymous function that takes and uses userDoc Parameter in syncCurrentUser Function\n                        />\n                    } />\n\n                    {/* Login component goes here */}\n                    <Route exact path=\"/login\" render={props => <Login {...props} onUserChange={userDoc => this.syncCurrentUSer(userDoc)} />} />\n\n                </Switch>\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default navBar;\n","import React from 'react';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\n\n\n\nclass App extends React.Component {\n\n\n  render() {\n\n\n\n    return (\n      <div >\n\n        <Navbar />\n\n  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}