{"version":3,"sources":["components/Navbar.js","components/Main.js","components/Footer.js","components/Home.js","components/Login.js","components/UserFunctions.js","components/Register.js","components/ProjectsList.js","api/service.js","components/Project_form.js","components/Update.js","components/SubtitleCreation.js","components/VideoPlayer.js","components/ProjectDetailPage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","className","to","userLink","onClick","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","src","alt","usertoken","Component","withRouter","Main","Footer","Home","Login","state","userName","email","password","errors","onChange","onSubmit","setState","target","name","value","user","setItem","axios","post","process","then","response","data","catch","err","console","log","login","res","userDoc","_id","alert","noValidate","htmlFor","autoComplete","placeholder","Register","newUser","register","ProjectsList","delete","idpro","getItem","hasErrors","projects","TheId","a","get","Name","length","href","map","proj","item","title","genre","description","language","key","style","width","height","videoURL","frameBorder","allow","allowFullScreen","renderingElements","service","create","baseURL","errorHandler","handleUpload","theFile","saveNewProject","newProject","theUserId","Projectform","handleChange","handleFileUpload","files","uploadData","FormData","append","secure_url","handleSubmit","usId","crossOrigin","blah","Update","project_title","project_genre","project_description","project_language","theTitle","theGenre","theDescription","theLanguage","project_Language","onChangeTitle","onChangeGenre","onChangeDescription","onChangeLanguage","obj","idPro","put","Id","align","SubtitleCreation","listSubtitles","tracks","document","querySelector","textTracks","subtitleList","getElementById","subtitles","sub","inTime","outTime","text","cue","VTTCue","addCue","innerHTML","inTimeVTT","outTimeVTT","listOneSubtitle","timeToVTT","num","splitNum","toFixed","split","totalSeconds","totalMilliseconds","hours","Math","floor","minutes","seconds","String","padStart","createSub","video","button","subInit","currentTime","cuesLength","cues","pause","endTime","completeSub","display","saveSubtitle","modal","theText","thisProjectId","projectId","inVTT","startTime","outVTT","thisSubtitle","error","play","cancelSubtitle","removeCue","downloadSub","downloadVTT","download","subArray","blob","Blob","endings","FileSaver","saveAs","rows","cols","maxLength","React","VideoPlayer","autoPlay","controls","preload","label","kind","srcLang","default","ProjectPage","ready","pip","playing","light","volume","muted","played","loaded","duration","playbackRate","loop","currentProjectId","getIdFromUrl","parts","window","location","pathname","pop","App","exact","path","component","ProjectDetails","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.b18d1315.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Navbar extends Component {\n  logOut(e) {\n    e.preventDefault()\n    localStorage.removeItem('usertoken')\n    this.props.history.push(`/login`)\n  }\n\n  render() {\n    const loginRegLink = (\n     \n      <ul >\n        <li>\n        <Link className=\"navbar-brand\" to=\"/\"></Link>\n        </li>\n        <li>\n          <Link className=\"navbar-brand\" to=\"/login\">\n            <span className = \"nav_elements\">Login</span>\n          </Link>\n        </li>\n        <li>\n          <Link className=\"navbar-brand\" to=\"/register\">\n          <span className = \"nav_elements\">Register</span>\n          </Link>\n        </li>\n      </ul>\n      \n    )\n\n    const userLink = (\n      \n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link className=\"navbar-brand\" to=\"/dashboard\">\n          <span className = \"nav_elements\"> Dashboard </span>\n          </Link>\n        </li> \n        <li className=\"nav-item\">\n          <Link className=\"navbar-brand\" to=\"/\" onClick={this.logOut.bind(this)}>\n          <span className = \"nav_elements\"> Logout </span>\n          </Link>\n        </li>\n      </ul>\n      \n     \n    )\n\n    return (\n      <nav className=\"navbar fixed-top navbar-expand-lg navbar-light bg-dark\">\n         <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n             <span className=\"navbar-toggler-icon\"></span>\n         </button>\n       <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n        <ul className=\"navbar-nav mr-auto\">\n           <li className=\"nav-item active\">\n           <Link to=\"/\" className=\"nav-link\"><span className = \"nav_elements\">\n             <img className=\"logoIron\" src=\"/2.png\" alt=\"blah\"/></span></Link>\n          </li>\n         </ul>\n        <span className=\"navbar-text\">{localStorage.usertoken ? userLink : loginRegLink}</span>\n    </div>\n    </nav>\n    )\n  }\n}\n\nexport default withRouter(Navbar)\n\n\n\n\n\n// import React from 'react';\n// import { Switch, Route, NavLink } from \"react-router-dom\";\n\n// import Signup from \"./user-components/Signup\";\n// import Login from \"./user-components/Login\"\n// import Home from \"./Home\";\n// import ProjectPage from './ProjectDetailPage';\n// import Project from './Project';\n// import ProjectsList from './ProjectsList';\n// import ProjectForm from './project-components/Project-Form';\n\n// import axios from \"axios\";\n\n// class navBar extends React.Component {\n\n//     constructor() {\n//         super();\n//         this.state = {\n//             currentUser: null\n//         }\n//     }\n\n//     componentDidMount() {\n//         // the url of backend port we get information from \n//         axios.get(\"http://localhost:3001/api/checkuser\", { withCredentials: true })\n//             .then(responseFromTheBackend => {\n//                 // console.log(\"User in APP.JS: \", responseFromTheBackend)\n//                 const { userDoc } = responseFromTheBackend.data;\n//                 this.syncCurrentUSer(userDoc);\n//             })\n//             .catch(err => console.log(\"Err while getting the user from the checkuser route: \", err))\n//     }\n\n//     syncCurrentUSer(user) {\n//         this.setState({ currentUser: user })\n//     }\n\n\n\n//     render() {\n\n//         return (\n\n//             <div >\n\n\n\n//                 <nav>\n\n//                     <ul className=\"navList\">\n\n//                         <li><NavLink className=\"link\" to=\"/\" > Home </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/aProjectPage\" > ProjectPage </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/signup-page\"> Signup </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/login\"> Login </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/ProjectsList\" > Project List </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/form\" > Project Form </NavLink></li>\n\n\n//                     </ul>\n//                     {/* If project component needs to be seen individually */}\n//                     {/* <NavLink to=\"/Project\" > Project Component </NavLink> */}\n\n//                 </nav>\n\n//                 <Switch>\n\n//                     {/* this is example how we would render component normally */}\n//                     {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n//                     <Route exact path=\"/\" component={Home} />\n//                     <Route exact path=\"/aProjectPage\" component={ProjectPage} />\n//                     <Route exact path=\"/project\" component={Project} />\n//                     <Route exact path=\"/ProjectsList\" render={props => <ProjectsList {...props} theUser={this.state.currentUser} />} />\n//                     <Route exact path=\"/form\" render={props => <ProjectForm {...props} theUser={this.state.currentUser} />} />\n\n\n//                     {/* if we have to pass some props down to a component,\n//               we can't use a standard way of rendering using component={},\n//               but instead we have to use render = {}  like in the example below */}\n//                     <Route exact path=\"/signup-page\" render={() =>\n//                         <Signup\n//                             currentUser={this.state.currentUser}\n//                             onUserChange={userDoc => this.syncCurrentUSer(userDoc)} //Pass anonymous function that takes and uses userDoc Parameter in syncCurrentUser Function\n//                         />\n//                     } />\n\n//                     {/* Login component goes here */}\n//                     <Route exact path=\"/login\" render={props => <Login {...props} onUserChange={userDoc => this.syncCurrentUSer(userDoc)} />} />\n\n//                 </Switch>\n\n\n//             </div>\n\n//         );\n//     }\n// }\n\n// export default navBar;\n\n\n\n\n\n\n// import React from 'react';\n// import { Switch, Route, NavLink } from \"react-router-dom\";\n\n// import Signup from \"./user-components/Signup\";\n// import Login from \"./user-components/Login\"\n// import Home from \"./Home\";\n// import ProjectPage from './ProjectDetailPage';\n// import Project from './Project';\n// import ProjectsList from './ProjectsList';\n// import ProjectForm from './project-components/Project-Form';\n\n// import axios from \"axios\";\n\n// class navBar extends React.Component {\n\n//     constructor() {\n//         super();\n//         this.state = {\n//             currentUser: null\n//         }\n//     }\n\n//     componentDidMount() {\n//         // the url of backend port we get information from \n//         axios.get(`${process.env.REACT_APP_API_URL}/checkuser`, { withCredentials: true })\n//             .then(responseFromTheBackend => {\n//                 // console.log(\"User in APP.JS: \", responseFromTheBackend)\n//                 const { userDoc } = responseFromTheBackend.data;\n//                 this.syncCurrentUSer(userDoc);\n//             })\n//             .catch(err => console.log(\"Err while getting the user from the checkuser route: \", err))\n//     }\n\n//     syncCurrentUSer(user) {\n//         this.setState({ currentUser: user })\n//     }\n\n\n\n//     render() {\n\n//         return (\n\n//             <div >\n\n\n\n//                 <nav>\n\n//                     <ul className=\"navList\">\n\n//                         <li><NavLink className=\"link\" to=\"/\" > Home </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/aProjectPage\" > ProjectPage </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/signup-page\"> Signup </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/login\"> Login </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/ProjectsList\" > Project List </NavLink></li>\n//                         <li><NavLink className=\"link\" to=\"/form\" > Project Form </NavLink></li>\n\n\n//                     </ul>\n//                     {/* If project component needs to be seen individually */}\n//                     {/* <NavLink to=\"/Project\" > Project Component </NavLink> */}\n\n//                 </nav>\n\n//                 <Switch>\n\n//                     {/* this is example how we would render component normally */}\n//                     {/* <Route exact path=\"/somePage\" component={ someComponentThatWillRenderWhenThisRouteIsHit }   /> */}\n//                     <Route exact path=\"/\" component={Home} />\n//                     <Route exact path=\"/aProjectPage\" component={ProjectPage} />\n//                     <Route exact path=\"/project\" component={Project} />\n//                     <Route exact path=\"/ProjectsList\" render={props => <ProjectsList {...props} theUser={this.state.currentUser} />} />\n//                     <Route exact path=\"/form\" render={props => <ProjectForm {...props} theUser={this.state.currentUser} />} />\n\n\n//                     {/* if we have to pass some props down to a component,\n//               we can't use a standard way of rendering using component={},\n//               but instead we have to use render = {}  like in the example below */}\n//                     <Route exact path=\"/signup-page\" render={() =>\n//                         <Signup\n//                             currentUser={this.state.currentUser}\n//                             onUserChange={userDoc => this.syncCurrentUSer(userDoc)} //Pass anonymous function that takes and uses userDoc Parameter in syncCurrentUser Function\n//                         />\n//                     } />\n\n//                     {/* Login component goes here */}\n//                     <Route exact path=\"/login\" render={props => <Login {...props} onUserChange={userDoc => this.syncCurrentUSer(userDoc)} />} />\n\n//                 </Switch>\n\n\n//             </div>\n\n//         );\n//     }\n// }\n\n// export default navBar;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Main() {\n    return (\n      <div id=\"main\">\n      <h1 id=\"main_text\">Add Subtitles to Video</h1>\n       <img src=\"https://media.giphy.com/media/5eEXDblmnFr2VlV6x1/giphy.gif\" alt=\"landing_pic\"/>\n       <div><br/></div>\n       <h6 id=\"sub_text\">Want to subtitle a video? \n       sub it! does it for you</h6>\n       <div><br/></div>\n       </div>\n    );\n  }\n\n  export default Main;","import React from 'react';\n\n\nfunction Footer() {\n    return (\n      <div id=\"footer\">\n          \n        <div className=\"card-deck\">\n  <div className=\"card bg-dark\">\n    <div className=\"card-body text-center\">\n      <p className=\"card-text\">Upload your footage</p>\n      <h6>Upload the video you want to subtitle or\n      paste a link if it is already online</h6>\n      \n    </div>\n  </div>\n  <div className=\"card bg-dark\">\n    <div className=\"card-body text-center\">\n      <p className=\"card-text\">Type and time your subtitles</p>\n      <h6>Transcribe the text you want and space your subtitle \n          on the video timeline using IronTitles editor</h6>          \n      \n    </div>\n  </div>\n  <div className=\"card bg-dark\">\n    <div className=\"card-body text-center\">\n      <p className=\"card-text\">Share your video</p>\n      <h6>Download your subtitled video to share on social media</h6>\n      <img className=\"socialMedia\" src=\"https://i.ya-webdesign.com/images/social-media-bar-png.png\" \n      \n      alt=\"social media pics\"/>\n    </div>\n  </div>\n  </div>\n  <br/>\n  <br/>\n  <br/>\n  <footer>\n    Copyright © 2019.\n  </footer>\n      </div>\n      \n    );\n  }\n\n  export default Footer;","import React, { Component } from 'react'\nimport Main from './Main';\nimport Footer from './Footer';\n\n\nclass Home extends Component {\n  render() {\n    return (\n         <div>\n           <Main />\n           <Footer/>\n          </div>\n    )\n  }\n}\n\nexport default Home\n\n\n\n// import React from \"react\";\n\n\n// export default class Home extends React.Component {\n\n//     render(){\n//         return (\n//             <section>\n//                 <h1> Home Page </h1>\n//                 <p> Welcome to the best app ever!  </p>\n//             </section>\n//         )\n//     }\n// }","import React, { Component } from 'react'\nimport { login } from './UserFunctions'\n\nclass Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      userName: '',\n      email: '',\n      password: '',\n      errors: {}\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    \n  }\n\n  \n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n    }\n  onSubmit(e) {\n    e.preventDefault()\n\n    const user = {\n      userName: this.state.userName,\n      email: this.state.email,\n      password: this.state.password,\n      }\n    \n      const { userName } = this.state;\n      localStorage.setItem('currentUser', userName);\n          \n\n      login(user).then(res => {\n        if (res) {\n        console.log(res.userDoc.userName)\n        localStorage.setItem('currentUserId', res.userDoc._id);\n        localStorage.setItem('currentUserName', res.userDoc.userName);\n        \n        this.props.history.push(`/dashboard/${res.userDoc._id}`)\n        }\n        else{\n           alert('Please, provide correct credentials')\n            }\n    })\n    \n       \n  }\n\n  render() {\n    \n    return (\n      <div className=\"container_login\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\"><span className='form_title_text'>\n                Have an account already?</span></h1>\n              {/* <div className=\"form-group\">\n                <label htmlFor=\"name\"><span className='form_text'>Name</span></label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"userName\"\n                  autoComplete=\"username\"\n                  placeholder=\"Enter your name\"\n                   value={this.state.userName}\n                  onChange={this.onChange}\n                />\n              </div> */}\n              <div className=\"form-group\">\n                <label htmlFor=\"email\"><span className='form_text'>Email address</span></label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\"><span className='form_text'>Password</span></label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  autoComplete=\"current-password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-dark btn-block\"\n              >\n                <span className='button_text'>Sign in</span>\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default Login","import axios from 'axios'\n\nexport const register = newUser => {\n  return axios\n    .post(`${process.env.REACT_APP_API_URL}/signup`, {\n      // `${process.env.REACT_APP_API_URL}/some-route`\n      userName: newUser.userName,\n      email: newUser.email,\n      password: newUser.password\n    })\n    .then(response => {\n      console.log('Registered')\n    })\n}\n\nexport const login = user => {\n  return axios\n    .post(`${process.env.REACT_APP_API_URL}/login`, {\n      userName: user.userName,\n      email: user.email,\n      password: user.password\n    })\n    .then(response => {\n      localStorage.setItem('usertoken', response.data)\n      return response.data\n      \n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\n\n\n\n// export const project = newProject => {\n//   return axios\n//     .post(`${process.env.REACT_APP_API_URL}/dashboard/create-project`, {\n//       title: newProject.title,\n//       genre: newProject.genre,\n//       fileName: newProject.fileName,\n//       description: newProject.description,\n//       language: newProject.language,\n\n//     })\n//     .then(response => {\n//       console.log('Project Created!')\n//     })\n    \n// }\n\n// export const getProfile = user => {\n//   return axios\n//     .get('/dashboard', {\n//       headers: { Authorization: ` ${this.getToken()}` }\n      \n//     })\n//     .then(response => {\n//       return response.data\n//       // console.log(user)\n//     })\n//     .catch(err => {\n//       console.log(err)\n//     })\n// }\n\n// export const checkUser = user => {\n//   return axios\n//     .get('/api/checkuser', {\n      \n      \n//     })\n//     .then(response => {\n//       return response.data\n//       // console.log(user)\n//     })\n//     .catch(err => {\n//       console.log(err)\n//     })\n// }\n\n","import React, { Component } from 'react'\nimport { register } from './UserFunctions'\n\nclass Register extends Component {\n  constructor() {\n    super()\n    this.state = {\n      userName: '',\n      email: '',\n      password: '',\n      errors: {}\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n\n    const newUser = {\n      userName: this.state.userName,\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    register(newUser).then(res => {\n      this.props.history.push(`/login`)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container_register\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\"><span className='form_title_text'>Create an account</span></h1>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\"><span className='form_text'>Name</span></label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"userName\"\n                  autoComplete=\"username\"\n                  placeholder=\"Enter your name\"\n                  value={this.state.userName}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\"><span className='form_text'>Email address</span></label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\"><span className='form_text'>Password</span></label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  autoComplete=\"current-password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button type=\"submit\"\n                className=\"btn btn-lg btn-dark btn-block\"\n              >\n               <span className='button_text'>Register</span> \n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Register","import React, { Component } from 'react';\nimport axios from 'axios';\n// import '../ProjectStyles.css';\nimport { Link } from 'react-router-dom'\n// import ProjectCard from './ProjectCard';\n// import { checkUser } from './UserFunctions'\n\nclass ProjectsList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasErrors: false,\n      projects: [],\n      userName : ''\n    }\n    \n  }\n       componentDidMount() {\n        const TheId = localStorage.getItem('currentUserId');\n        ;(async () => {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/dashboard/${TheId}`)\n          this.setState({ projects: response.data })\n          // console.log(this.state.projects[0]['title'])\n        })()\n        \n        const Name = localStorage.getItem('currentUserName');\n        this.setState({ userName : Name});\n  }\n\n  \n  delete = e => {\n    const idpro = localStorage.getItem('projId')\n    axios.delete(`${process.env.REACT_APP_API_URL}/project/${idpro}/deleteProject`)\n        .then(console.log('Deleted'))\n        .catch(err => console.log(err))\n        \n      }\n       \n  \n  \n  \n  renderingElements(){\n    // const uId = localStorage.getItem('currentUserId');\n    if(this.state.projects.length === 0){\n      return (<div>\n                 <h2>\n                 What are you waiting for creating a project?\n                </h2>\n               <a href={`/form`} className=\"btn btn-dark\">Add a project</a>\n            </div>)\n    }\n    else{\n    const newArr = (this.state.projects).map((proj, item) => {\n      localStorage.setItem('projId', proj._id);\n      localStorage.setItem('title', proj.title);\n      localStorage.setItem('genre', proj.genre);\n      localStorage.setItem('description', proj.description);\n      localStorage.setItem('language', proj.language);\n      \n      // const theProj = localStorage.getItem('projId')\n      return (\n        <div className= \"container_profile\" key={proj._id}>\n        <div className=\"card\" style={{width:450}}>\n           <div className=\"embed-responsive embed-responsive-4by3\">\n            <iframe width=\"100%\" height=\"100%\" src={proj.videoURL} frameBorder=\"0\" \n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n            allowFullScreen  title=\"1\"></iframe>\n            </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">{proj.title}</h4>\n                <h6 className=\"card-text\">basic category: {proj.genre}</h6>\n                <h6 className=\"card-text\">brief reference: {proj.description}</h6>\n                <h6 className=\"card-text\">target language: {proj.language}</h6>\n                  {/* TODO: Get project ID as variable to replace 'workingproject' */}\n                  \n              <Link to={`/project/${proj._id}`} className=\"btn btn-dark\">Full project</Link>\n              <Link to={`/update`} className=\"btn btn-secondary\">Update project</Link>\n              <button onClick={this.delete} className=\"remove-btn btn btn-danger\">Delete</button>\n               </div>\n              </div>\n              <div><Link to={\"/form\"} className=\"btn btn-dark\">Add a project</Link></div>\n         </div>\n        \n              )\n    })\n        return newArr\n    }\n}\n\n render() {\n    \n      return (\n        <div className=\"container_profile\">\n            <div><h2>Hello, {this.state.userName}!</h2></div>\n             <div>\n                 {this.renderingElements()}\n             </div>\n        </div>\n    )\n   \n  }\n}\n\nexport default ProjectsList","// api/service.js\nimport axios from 'axios';\n\nconst service = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/`,\n  // withCredentials: true // => you might need this when having the users in the app \n});\n\nconst errorHandler = err => {\n  // console.error(err);\n  throw err;\n};\n\nexport default {\n  service,\n\n  handleUpload (theFile) {\n    // console.log('file in service: ', theFile)\n    return service.post('/upload', theFile)\n      .then(res => res.data)\n      .catch(errorHandler);\n  },\n\n  saveNewProject (newProject) {\n    const theUserId = localStorage.getItem('currentUserId');\n    console.log('new project is: ', newProject)\n    return service.post(`create-project/${theUserId}`, newProject)\n      .then(res => res.data)\n      .catch(errorHandler);\n  }\n}\n\n\n\n","import React, { Component } from \"react\";\n// import the service file since we need it to send (and get) the data to(from) server\nimport service from '../api/service';\nimport 'bulma'\n\n\nclass Projectform extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          title: \"\",\n          genre: \"\",\n          description: \"\",\n          language: \"\",\n          videoURL: \"\"\n        };\n    }\n    \n    handleChange = e => {  \n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    // this method handles just the file upload\n    handleFileUpload = e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n        const uploadData = new FormData();\n        // imageUrl => this name has to be the same as in the model since we pass\n        // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n        uploadData.append(\"videoURL\", e.target.files[0]);\n        \n        service.handleUpload(uploadData)\n        .then(response => {\n            // console.log('response is: ', response);\n            // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n            this.setState({ videoURL: response.secure_url });\n            console.log(this.state.videoURL)\n          })\n          .catch(err => {\n            console.log(\"Error while uploading the file: \", err);\n          });\n    }\n\n    // this method submits the form\n    handleSubmit = e => {\n        e.preventDefault();\n        \n        service.saveNewProject(this.state)\n        .then(res => {\n            console.log('added: ', res);\n            console.log(res)\n            const usId = localStorage.getItem('currentUserId');\n            this.props.history.push(`/dashboard/${usId}`);\n            // here you would redirect to some other page \n        })\n        .catch(err => {\n            console.log(\"Error while adding the thing: \", err);\n        });\n         \n                \n    }  \n\n  \n        \n    render() {\n      function blah(){\n        const fileInput = document.querySelector('#file-js-example input[type=file]');\n        fileInput.onChange = () => {\n          if (fileInput.files.length > 0) {\n            const fileName = document.querySelector('#file-js-example .file-name');\n            fileName.textContent = fileInput.files[0].name;\n          }\n        }\n      }\n  \n  \n   \n    \n        return (\n        \n            <div className=\"container_project\">\n                    <div className=\"row\">\n                      <div className=\"col-md-6 mt-5 mx-auto\">\n                      <form noValidate onSubmit={e => this.handleSubmit(e)} crossOrigin=\"anonymous\">\n                      <h1 className=\"h3 mb-3 font-weight-normal\"></h1>\n\n                           \n<div id=\"file-js-example\" className=\"file is-centered is-dark has-name\">\n<label className=\"file-label\">\n  <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={(e) => this.blah()} \n  onChange={(e) => this.handleFileUpload(e)}/>\n  <span className=\"file-cta\">\n    <span className=\"file-icon\">\n      <i className=\"fas fa-upload\"></i>\n    </span>\n    <span className=\"file-label\">\n      Choose a file…\n    </span>\n  </span>\n  <span className=\"file-name\">\n    No file uploaded\n  </span>\n</label>\n</div>\n         {/* <div className=\"custom-file\">\n            <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" \n                 aria-describedby=\"inputGroupFileAddon01\" onChange={(e) => this.handleFileUpload(e)} />\n                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">Choose file</label>\n                        </div>  */}\n                        \n                        <br/>\n                         <div className=\"form-group\">\n                           <label htmlFor=\"title\"><span className='form_text'>Title</span></label>\n                           <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name=\"title\"\n                              placeholder=\"Give it a title\"\n                              value={this.state.title}\n                              onChange={ e => this.handleChange(e)} \n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label htmlFor=\"genre\"><span className='form_text'>Category</span></label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name=\"genre\"\n                              placeholder=\"Category\"\n                              value={this.state.genre}\n                              onChange={ e => this.handleChange(e)}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label htmlFor=\"description\"><span className='form_text'>What is it about?</span></label>\n                            <textarea\n                              type=\"text\"\n                              className=\"form-control\"\n                              name=\"description\"\n                              placeholder=\"description\"\n                              value={this.state.description}\n                              onChange={ e => this.handleChange(e)}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label htmlFor=\"language\"><span className='form_text'>Target language</span></label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name=\"language\"\n                              placeholder=\"language\"\n                              value={this.state.language}\n                              onChange={ e => this.handleChange(e)}\n                            />\n                          </div>\n                          <button type=\"submit\" className=\"btn btn-lg btn-dark btn-block\">\n                            <span className='button_text'> Save your project</span>\n                          </button>\n                        </form>\n                        </div>\n                    </div>\n                  </div>\n                  \n        );\n    }\n}\n\nexport default Projectform;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import axios from \"axios\";\n\n// import FileViewer from 'react-file-viewer';\n// import Dropzone from './dropzone'\n\n// import './../App.css'\n\n// class ProjectForm extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             videoTitle: \"\",\n//             genre: \"\",\n//             description: '',\n//             language: \"\",\n//             videoFile: ``,\n//             tempFileURL: '',\n//             userGaveFile: true,\n//             message: null\n//         }\n\n//     }\n\n//     genericSync(event) {\n//         // console.log(\"what is: \", event.target.value)\n//         const { name, value } = event.target;\n//         this.setState({ [name]: value });\n//     }\n\n\n//     // TODO MAKE THIS FUNCTION UPDATE PARENT STATE FROM CHILLD (DROPZONE)\n\n//     updateStateFileIfFileAdded(value) {\n\n\n//         console.log(`Im in the function in prop, preparing to update state!`);\n//         this.setState({\n//             videoFile: value,\n//             tempFileURL: URL.createObjectURL(value),\n//             userGaveFile: true\n//         });\n\n//         console.log(`I am after state is set with file from dropzone!`);\n\n//     }\n\n//     handleSubmit(event) {\n//         if (!this.props.theUser) {\n//             this.props.history.push('/dashboard');\n//         }\n\n//         // prevent behavior of form submission (refreshing or clcearing?) page\n//         event.preventDefault()\n\n//         console.log('ENTERING SUBMIT, FILE IN STATE IS ', this.state.videoFile);\n\n//         let data = new FormData();\n//         data.append('videoTitle', this.state.videoTitle);\n//         data.append('genre', this.state.genre);\n//         data.append('description', this.state.description);\n//         data.append('language', this.state.language);\n\n//         console.log('SELECTED FILE BEFORE APPPENDING', this.state.videoFile);\n\n//         data.append('videoFile', this.state.videoFile);\n//         let newUser = localStorage.getItem('currentUserId');\n//         axios.post(`${process.env.REACT_APP_API_URL}/create-project/${newUser}`,\n//             data, //Send form data to post\n//             { withCredentials: true })\n\n//             .then((response) => {\n//                 console.log('SUCCESSFULCALL TO CREATE PROJECT ROUTE');\n\n//                 // Redirect to dashboard after video upload\n//                 // Maybe a modal asking if they want to upload another first?\n//                 this.props.history.push(`/dashboard/${newUser}`)\n//                 // alert(JSON.stringify(response));\n//             })\n//             .catch(function (error) {\n//                 console.log(error);\n//             });\n\n//     }\n\n//     render() {\n\n\n//         return (\n\n//             <div className=\"project-upload-container\">\n\n//                 {/* <h2> Video Info </h2> */}\n\n//                 <form className=\"project-upload-container__form\" name='myForm' onSubmit={event => this.handleSubmit(event)} >\n\n//                     <h2> Video Info </h2>\n\n//                     <label> Video Title: </label>\n//                     <input\n//                         value={this.state.videoTitle} // this.state.fullName\n//                         onChange={event => this.genericSync(event)}\n//                         type=\"text\"\n//                         name=\"videoTitle\"\n//                         placeholder=\"The Great Journey\"\n//                     />\n\n//                     <label> Video Genre: </label>\n//                     <input\n//                         value={this.state.genre} // this.state.fullName\n//                         onChange={event => this.genericSync(event)}\n//                         type=\"text\"\n//                         name=\"genre\"\n//                         placeholder=\"The Great Journey\"\n//                     />\n\n//                     <label> Video Description: </label>\n//                     <input\n//                         value={this.state.description} // this.state.fullName\n//                         onChange={event => this.genericSync(event)}\n//                         type=\"text\"\n//                         name=\"description\"\n//                         placeholder=\"The Great Journey\"\n//                     />\n\n//                     <label className=\"file-preview\"> Video Language: </label>\n//                     <input\n//                         value={this.state.language} // this.state.fullName\n//                         onChange={event => this.genericSync(event)}\n//                         type=\"text\"\n//                         name=\"language\"\n//                         placeholder=\"The Great Journey\"\n//                     />\n\n//                     <br /> <label> Video File: </label>\n\n//                     <Dropzone updateParent={this.updateStateFileIfFileAdded.bind(this)} />\n\n//                     <button> Upload! </button>\n\n//                     {/* Styling is in app.css */}\n//                     <FileViewer\n//                         fileType={'mp4'}\n//                         filePath={this.state.tempFileURL}\n\n//                     />\n\n\n//                 </form>\n\n//                 {/* if the message is not null (basically if there's a message) then show it in this <div> tag */}\n//                 {this.state.message && <div> {this.state.message} </div>}\n\n//             </div>\n\n//         );\n//     }\n// }\n\n// export default ProjectForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Update extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      project_title: '',\n      project_genre: '',\n      project_description: '',\n      project_language: '',\n    }\n  }\n  \n  componentDidMount() {\n    const theTitle = localStorage.getItem('title')\n    const theGenre = localStorage.getItem('genre')\n    const theDescription = localStorage.getItem('description')\n    const theLanguage = localStorage.getItem('language')\n              this.setState({ \n                project_title: theTitle, \n                project_genre: theGenre, \n                project_description: theDescription, \n                project_Language: theLanguage, \n            })\n            this.onChangeTitle = this.onChangeTitle.bind(this);\n            this.onChangeGenre = this.onChangeGenre.bind(this);\n            this.onChangeDescription = this.onChangeDescription.bind(this);\n            this.onChangeLanguage = this.onChangeLanguage.bind(this);\n            this.onSubmit = this.onSubmit.bind(this); \n }\n\n onChangeTitle(e) {\n  this.setState({\n    project_title: e.target.value\n  });\n}\nonChangeGenre(e) {\n  this.setState({\n    project_genre: e.target.value\n  })  \n}\nonChangeDescription(e) {\n  this.setState({\n    project_description: e.target.value\n  })\n}\nonChangeLanguage(e) {\n  this.setState({\n    project_language: e.target.value\n  })\n}\n  \n  onSubmit(e) {\n    e.preventDefault();\n\n    const obj = {\n      title: this.state.project_title,\n      genre: this.state.project_genre,\n      description: this.state.project_description,\n      language: this.state.project_language,\n    };\n\n    const idPro = localStorage.getItem('projId')\n    axios.put(`${process.env.REACT_APP_API_URL}/project/${idPro}/updateProject`, obj)\n        .then(res => console.log(res.data));\n\n    const Id = localStorage.getItem('currentUserId');\n      this.props.history.push(`/dashboard/${Id}`);\n    }\n \n  render() {\n    return (\n        <div style={{ \"marginTop\": \"10%\" }}>\n            <h3 align=\"center\">Update Project</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Title:  </label>\n                    <input \n                      type=\"text\" \n                      name=\"title\"\n                      className=\"form-control\" \n                      value={this.state.project_title}\n                      // onChange={ e => this.handleChange(e)}\n                      onChange={this.onChangeTitle}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>Genre: </label>\n                    <input type=\"text\" \n                       name=\"genre\"\n                      className=\"form-control\"\n                      value={this.state.project_genre}\n                      // onChange={ e => this.handleChange(e)}\n                      onChange={this.onChangeGenre}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>Description: </label>\n                    <textarea type=\"text\" \n                      name=\"description\"\n                      className=\"form-control\"\n                      value={this.state.project_description}\n                      // onChange={ e => this.handleChange(e)}\n                      onChange={this.onChangeDescription}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>Language: </label>\n                    <input type=\"text\" \n                      name=\"language\"\n                      className=\"form-control\"\n                      value={this.state.project_language}\n                      onChange={this.onChangeLanguage}\n                      // onChange={ e => this.handleChange(e)}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" \n                      value=\"Edit Project\" \n                      className=\"btn btn-lg btn-dark btn-block\"/>\n                </div>\n            </form>\n        </div>\n    )\n  }\n}","import React from 'react';\nimport axios from \"axios\";\nimport FileSaver from 'file-saver';\n\nclass SubtitleCreation extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      subInit: false,      \n      inTime: 0,\n      outTime: 0,\n      text: '',  \n      inTimeVTT: '',\n      outTimeVTT: '',\n      subtitles: [],\n      download: []\n    }\n  }\n\n  componentDidMount(){\n    let thisProjectId = this.props.projectId;\n    axios.get(`${process.env.REACT_APP_API_URL}/subtitles/${thisProjectId}`)\n     .then( (response) => {\n       this.setState({ subtitles: response.data.subArray });       \n       this.listSubtitles();\n    })\n     .catch((err)=> {})\n    }\n  \n  listSubtitles = () => {\n    let tracks = document.querySelector('video').textTracks;    \n    let subtitleList = document.getElementById('subtitle-list');\n    let projectSubtitles = this.state.subtitles;\n    \n    // Loop through array\n    projectSubtitles.map((sub) => {\n      // Add existing subtitles to HTML track tag\n      let inTime = sub.inTime;\n      let outTime = sub.outTime;\n      let text = sub.text;\n      let cue = new VTTCue(inTime,outTime,text);\n      tracks[0].addCue(cue);\n      console.log(tracks[0]);\n\n      // Display existing subtitles in DOM\n      subtitleList.innerHTML += `<li>${sub.text} || ${sub.inTimeVTT} --> ${sub.outTimeVTT}</li><br>`;\n    })\n  }\n\n  listOneSubtitle = (sub, inTimeVTT, outTimeVTT) => {\n    // Display subtitle in DOM\n    let subtitleList = document.getElementById('subtitle-list');    \n    subtitleList.innerHTML += `<li>${sub} || ${inTimeVTT} --> ${outTimeVTT}</li><br>`;\n  }\n\n  timeToVTT = (num) => {\n    let stringNum = num.toFixed(3);\n    let splitNum = stringNum.split('.');\n    let totalSeconds = splitNum[0];\n    let totalMilliseconds = splitNum[1];    \n    \n    let hours = Math.floor(totalSeconds / 3600);\n    totalSeconds %= 3600;\n    let minutes = Math.floor(totalSeconds / 60);\n    let seconds = totalSeconds % 60;    \n    \n    // If you want strings with leading zeroes:\n    minutes = String(minutes).padStart(2, \"0\");\n    hours = String(hours).padStart(2, \"0\");\n    seconds = String(seconds).padStart(2, \"0\");\n    \n    let timeVTT = hours + \":\" + minutes + \":\" + seconds + \".\" + totalMilliseconds;\n    \n    return timeVTT;\n    };\n  \n    // function to create each subtitle\n    createSub = () => {\n      let tracks = document.querySelector('video').textTracks;\n      let video = document.getElementById('video');\n      let button = document.getElementById('creation-button');\n\n      // if inTime has not been defined, create a new cue with startTime set to current video time\n      if (this.state.subInit === false){      \n        let inTime = video.currentTime;\n        let cue = new VTTCue(inTime,null,'');      \n        tracks[0].addCue(cue);    \n        this.setState({subInit: true });\n        button.innerHTML = 'Out Time';\n      // if inTime has already been defined, set cue endTime to current video time and pause video\n      } else {\n        let outTime = video.currentTime;\n        let cuesLength = tracks[0].cues.length;        \n        video.pause();\n        tracks[0].cues[cuesLength - 1].endTime = outTime;\n        this.setState({subInit: false });\n        // call function to display modal and enter text subtitle\n        this.completeSub();\n        button.innerHTML = 'In Time';      \n      }\n    };\n\n    // function to display subtitle text modal after endTime has been set\n    completeSub = () => {\n      let modal = document.getElementById('sub-text');\n      modal.style.display = 'block';      \n    };\n\n    // function to save subtitle with Save button in modal\n    saveSubtitle = () => {\n      let modal = document.getElementById('sub-text');\n      let tracks = document.querySelector('video').textTracks;\n      let video = document.getElementById('video');\n      let cuesLength = tracks[0].cues.length;\n      // set cue text to the text typed in the modal\n      let theText = document.getElementById('this-sub-text').value;\n      tracks[0].cues[cuesLength - 1].text = theText;\n      // clear modal text\n      document.getElementById('this-sub-text').value = '';\n      let thisProjectId = this.props.projectId;\n\n      // Create VTT inTime and outTime with timeToVTT function\n      let inVTT = this.timeToVTT(tracks[0].cues[cuesLength - 1].startTime);\n      let outVTT = this.timeToVTT(tracks[0].cues[cuesLength - 1].endTime);\n\n      // Set state with current subtitle\n      this.setState({inTime: tracks[0].cues[cuesLength - 1].startTime, outTime: tracks[0].cues[cuesLength - 1].endTime, text: tracks[0].cues[cuesLength - 1].text, inTimeVTT: inVTT, outTimeVTT: outVTT },\n        () => {\n          // After setting state, define headers for axios post request\n          let thisSubtitle = {                \n                inTime: this.state.inTime,\n                outTime: this.state.outTime,\n                text: this.state.text,\n                inTimeVTT: this.state.inTimeVTT,\n                outTimeVTT: this.state.outTimeVTT\n              }    \n          \n          // Display sub in list\n          this.listOneSubtitle(this.state.text, this.state.inTimeVTT, this.state.outTimeVTT); \n          \n          // Post request to push current subtitle to the database\n          axios.post(`${process.env.REACT_APP_API_URL}/${thisProjectId}/add-sub`, thisSubtitle)\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n\n          \n        }\n        );\n      video.play();\n      modal.style.display = 'none';\n    };\n\n    // function to cancel and clear current subtitle sith Cancel button in modal\n    cancelSubtitle = () => {\n      let modal = document.getElementById('sub-text');\n      let tracks = document.querySelector('video').textTracks;\n      let video = document.getElementById('video');\n      let cuesLength = tracks[0].cues.length;\n      // delete current cue\n      tracks[0].removeCue(tracks[0].cues[cuesLength - 1]);\n      // clear modal text\n      document.getElementById('this-sub-text').value = '';\n      video.play();\n      modal.style.display = 'none';\n    };\n\n    downloadSub = () => {\n      let thisProjectId = this.props.projectId;\n      let downloadVTT = `WEBVTT`\n      axios.get(`${process.env.REACT_APP_API_URL}/subtitles/${thisProjectId}`)\n      .then( (response) => {\n        this.setState({ download: response.data.subArray });       \n        let finishedSubs = this.state.download;\n        finishedSubs.map((sub) => {\n          downloadVTT += `\\n\\n${sub.inTimeVTT} --> ${sub.outTimeVTT}\\n${sub.text}`;          \n        });\n        let blob = new Blob([downloadVTT], {type: \"text/plain;charset=utf-8\", endings:'native'});\n        FileSaver.saveAs(blob, 'subtitles.vtt');\n        })\n      .catch((err)=> {});\n      \n    }\n\n  render() {\n\n    return(\n    <div>\n      <button id='creation-button' onClick={this.createSub}>In Time</button>\n      {/* Subtitle Modal */}\n      <div id=\"sub-text\" className=\"modal\" style={{display:'none'}}>\n\n        {/* Modal content */}\n        <div id=\"sub-modal\">\n            <span id=\"close\" onClick={this.cancelSubtitle}>&times;</span>\n            <textarea id=\"this-sub-text\" rows=\"2\" cols=\"50\" maxLength=\"80\"></textarea>\n            <button id=\"save-text-btn\" onClick={this.saveSubtitle}>Save</button>\n            <button id=\"cancel-btn\" onClick={this.cancelSubtitle}>Cancel</button>\n        </div>\n\n      </div>\n\n      {/* Subtitle list div */}\n      <div id='show-subtitles'>\n        Subtitles:\n        <ul id='subtitle-list'>\n        </ul>\n      </div>\n\n      <button id='download-button' onClick={this.downloadSub}>Download subtitles</button>\n\n    </div>\n\n    );\n  }\n}\n\nexport default SubtitleCreation;","import React from 'react';\n\nclass VideoPlayer extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    }\n  }\n\n  render() {\n\n    return(\n    <div>\n    <div id='video-container'>\n      <video id=\"video\" crossOrigin=\"anonymous\" autoPlay controls preload=\"metadata\">\n      <source src={this.props.videoURL} />\n        <track id=\"my-subs\" label=\"English\" kind=\"subtitles\" srcLang=\"en\" src=\"\" default/> \n        </video>\n    </div>      \n    </div>\n\n    );\n  }\n}\n\nexport default VideoPlayer;\n\n","import React from 'react';\n// import ReactPlayer from 'react-player';\nimport SubtitleCreation from './SubtitleCreation';\nimport VideoPlayer from './VideoPlayer';\n// import ShowSubtitles from './ShowSubtitles';\nimport axios from 'axios';\n\nclass ProjectPage extends React.Component {\n    \n    state = {\n        videoURL: '',        \n        ready: false,\n        pip: false,\n        playing: true,\n        controls: false,\n        light: false,\n        volume: 0.8,\n        muted: false,\n        played: 0,\n        loaded: 0,\n        duration: 0,\n        playbackRate: 1.0,\n        loop: false,\n        currentProjectId: '',        \n    }\n    \n    getIdFromUrl = () => {\n        let path = window.location.pathname;\n        let parts = path.split('/');\n        let projectId = parts.pop() || parts.pop(); \n        return projectId;       \n    }\n    \n    UNSAFE_componentWillMount(){\n        let currentProjectId = this.getIdFromUrl();\n        console.log('my project ID is: '+ currentProjectId);\n        this.setState({currentProjectId: currentProjectId});\n        axios.get(`${process.env.REACT_APP_API_URL}/project-info/${currentProjectId}`)\n            .then( (response) => {                \n                this.setState({ videoURL: response.data.videoURL });\n            })\n            .catch((err)=> {})\n         \n        }\n\n    componentDidMount(){\n        this.state.ready = true;\n    }\n\n\n        // https://res.cloudinary.com/alejotsv/video/upload/v1572146282/videoplayback_dznrfa.mp4\n    \n    // playVideo = () => {\n    //     // You can use the play method as normal on your video ref\n    //     this.refs.vidRef.play();\n        \n    // };\n    \n    // pauseVideo = () => {\n    //     // Pause as well\n    //     this.refs.vidRef.pause();\n    //     this.refs.vidRef.currentTime = 0;\n    // };\n    \n    render() {\n        \n        // \n        let videoURL = this.state.videoURL;        \n        let video;\n        \n        if (this.state.ready){\n            video = < VideoPlayer videoURL={videoURL} />;\n        } else {\n            video = 'Loading...';\n        }      \n        \n\n        return (\n\n            <div className= \"container_profile\">\n\n                {video}\n                {/* <div id='video-container'>\n                    <video id=\"video\" crossOrigin=\"anonymous\" autoPlay controls preload=\"metadata\">\n                    <source src={this.state.videoURL} />\n                    <track id=\"my-subs\" label=\"English\" kind=\"subtitles\" srcLang=\"en\" src=\"\" default/> \n                    </video>\n                </div> */}\n                \n                {/* TODO: Get projectID from URL */}\n                < SubtitleCreation projectId={this.state.currentProjectId}/>\n                \n            </div>\n\n\n\n\n        );\n    }\n}\n\nexport default ProjectPage;","import React, { Component } from 'react'\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport Register from './components/Register'\n// import Prueba from './components/Prueba'\nimport ProjectsList from './components/ProjectsList'\nimport Projectform from './components/Project_form';\nimport Update from './components/Update';\nimport ProjectDetails from './components/ProjectDetailPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n        <Route exact path=\"/\" component={Home} />\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route path=\"/dashboard\" component={ProjectsList} />\n            <Route path=\"/project\" component={ProjectDetails} />\n            <Route path=\"/update\" component={Update} />\n            <Route exact path=\"/form\" component={Projectform} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}